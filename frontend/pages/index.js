import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import React,{useRef,useState} from 'react'
import {Doughnut} from 'react-chartjs-2';
import ChartDataLabels from 'chartjs-plugin-datalabels';
import {Chart, ArcElement,Legend,Title,Tooltip} from 'chart.js'



Chart.register(ArcElement,Legend,Title,Tooltip,ChartDataLabels);

export default function Home() {
  const [label, setLabel] = useState([])
  const [value, setValue] = useState([])

  const data = {
    labels:label,
    datasets: [
      {
      label: 'Sentiments Dataset',
      data: value,
      backgroundColor: [
      
      '#FF0000',
      '#A5A5A5',
      '#2DB500',
     // '#0f90e9'
      ],
      hoverBackgroundColor: [
      '#FF0000',
      '#A5A5A5',
      '#2DB500',
      //'#0f90e9'
      ]
    }],
    
  };

  const options = {
    
      plugins: {
        datalabels: {
          color: 'blue',
          labels: {
            title: {
              font: {
                weight: 'bold'
              }
            },
            value: {
              color: 'green'
            }
          }
        }
      }

  }

  //get params form form
  const sentiment_text= useRef();

  //onsumbmit forms
  const handleSubmit = async e =>{
    e.preventDefault();
    //reset to zero
    setLabel([])
    setValue([])

   const res = await fetch('http://localhost:5000/predict',{
        method: "POST",
        body: JSON.stringify({
          text: sentiment_text.current.value}),
        headers:{
            "Content-Type": "application/json"
        }})
    
    const result = await res.json()

    for (const [k, v] of Object.entries(result)) {
      if(k!=='compound'){
        setLabel(label=>[...label,k])
        setValue(value=>[...value,(v*100)])
      }
    }

  }

  return (
    <>
    <Head>
      <title>Sentiment App</title>
      <meta name="description" content="generated by nextJS"/>
      <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css"></link>
    </Head>
    
    <div className={styles.wrap}>
      <div className={styles.containerTitle}>
          <h1 className={styles.title}>Sentiment</h1>
      </div>
      <div className={styles.search}>
        <form onSubmit={handleSubmit}>
          
            <input ref={sentiment_text} type="text" className={styles.searchTerm} placeholder="What are you looking for?"/>
            <button className={styles.searchButton}>
              <i className="bi bi-search"></i>
            </button>
        </form>
      </div>
    </div>
    {label ? 
    <div className={styles.charts}>
      <Doughnut
        data={data}
        options={options}
        width={100}
        height={100}
      />
   </div>
   : null }
    </>
  )
}
